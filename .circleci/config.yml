version: 2.1
parameters:
  run_workflow_local_docs:
    default: true
    type: boolean

  run_workflow_api_docs:
    default: false
    type: boolean

  run_workflow_dummy_test:
    default: false
    type: boolean

aliases:
  - &check-code-format
    name: Check code formatting
    command: yarn prettier --check

  - &restore-cache
    keys:
      - v2-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
      - v2-dependencies-{{ .Branch }}
  - &save-node-cache
    key: v2-dependencies-{{ .Branch }}-{{ checksum "package.json" }}
    paths:
      - node_modules

  - &install-node-dependencies
    name: Install node dependencies
    command: yarn install --frozen-lockfile

defaults: &defaults
  working_directory: ~/website

jobs:
  dummy-job:
    <<: *defaults
    docker:
      - image: node:10
    resource_class: small
    steps:
      - run:
          name: Dummy Release
          command: echo Dummy Release Done

  check-formatting:
    <<: *defaults
    docker:
      - image: node:10
    resource_class: small
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *install-node-dependencies
      - run: *check-code-format
      - save_cache: *save-node-cache

  build-api-docs:
    working_directory: ~/website
    docker:
      - image: node:10
    resource_class: medium
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *install-node-dependencies
      - run:
          name: Build Daf
          command: yarn build:daf
      - run:
          name: Build Documentation
          command: yarn docs
      - run:
          name: Authenticate Github
          command: |
            git remote set-url origin https://uport-project:$GITHUB_TOKEN@github.com/uport-project/daf-website.git
            git config --global user.email $GITHUB_EMAIL
            git config --global user.name $GITHUB_USER
      - run:
          name: Push changes to repo
          command: |
            RELEASE_VERSION=`echo "console.log(require('./daf/lerna.json').version)" | node`

            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git status

              echo Deploying docs for version v$RELEASE_VERSION

              git add .
              git commit -m "chore(release): :rocket: api docs v${RELEASE_VERSION}"
              git tag -a v$RELEASE_VERSION -m "v${RELEASE_VERSION}"
              git push origin master --tags
            else
              echo Not master branch
              echo v$RELEASE_VERSION
            fi

workflows:
  version: 2

  verify-local-docs:
    when: << pipeline.parameters.run_workflow_local_docs >>
    jobs:
      - check-formatting

  verify-build-api-docs:
    when: << pipeline.parameters.run_workflow_api_docs >>
    jobs:
      - build-api-docs

  verify-dummy-test:
    when: << pipeline.parameters.run_workflow_dummy_test >>
    jobs:
      - dummy-job
